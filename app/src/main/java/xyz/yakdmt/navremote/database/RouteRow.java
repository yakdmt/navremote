package xyz.yakdmt.navremote.database;

import de.greenrobot.dao.DaoException;
import xyz.yakdmt.navremote.utils.Saveable;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "ROUTE_ROW".
 */
public class RouteRow implements Saveable {

    private String delivery_id;
    private String string_number;
    private String position;
    /** Not-null value. */
    private String id;
    private String checkpoint_description;
    private String procedure_type;
    private String expected_arrival_date;
    private String actual_arrival_date;
    private String actual_arrival_time;
    private String actual_departure_date;
    private String actual_departure_time;
    private String expected_departure_date;
    private String expected_departure_time;
    private String country_code;
    private String country_name;
    private String address;
    private String checkpoint_id;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient RouteRowDao myDao;

    private Checkpoint checkpoint;
    private String checkpoint__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public RouteRow() {
    }

    public RouteRow(String id) {
        this.id = id;
    }

    public RouteRow(String delivery_id, String string_number, String position, String id, String checkpoint_description, String procedure_type, String expected_arrival_date, String actual_arrival_date, String actual_arrival_time, String actual_departure_date, String actual_departure_time, String expected_departure_date, String expected_departure_time, String country_code, String country_name, String address, String checkpoint_id) {
        this.delivery_id = delivery_id;
        this.string_number = string_number;
        this.position = position;
        this.id = id;
        this.checkpoint_description = checkpoint_description;
        this.procedure_type = procedure_type;
        this.expected_arrival_date = expected_arrival_date;
        this.actual_arrival_date = actual_arrival_date;
        this.actual_arrival_time = actual_arrival_time;
        this.actual_departure_date = actual_departure_date;
        this.actual_departure_time = actual_departure_time;
        this.expected_departure_date = expected_departure_date;
        this.expected_departure_time = expected_departure_time;
        this.country_code = country_code;
        this.country_name = country_name;
        this.address = address;
        this.checkpoint_id = checkpoint_id;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getRouteRowDao() : null;
    }

    public String getDelivery_id() {
        return delivery_id;
    }

    public void setDelivery_id(String delivery_id) {
        this.delivery_id = delivery_id;
    }

    public String getString_number() {
        return string_number;
    }

    public void setString_number(String string_number) {
        this.string_number = string_number;
    }

    public String getPosition() {
        return position;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    /** Not-null value. */
    public String getId() {
        return id;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setId(String id) {
        this.id = id;
    }

    public String getCheckpoint_description() {
        return checkpoint_description;
    }

    public void setCheckpoint_description(String checkpoint_description) {
        this.checkpoint_description = checkpoint_description;
    }

    public String getProcedure_type() {
        return procedure_type;
    }

    public void setProcedure_type(String procedure_type) {
        this.procedure_type = procedure_type;
    }

    public String getExpected_arrival_date() {
        return expected_arrival_date;
    }

    public void setExpected_arrival_date(String expected_arrival_date) {
        this.expected_arrival_date = expected_arrival_date;
    }

    public String getActual_arrival_date() {
        return actual_arrival_date;
    }

    public void setActual_arrival_date(String actual_arrival_date) {
        this.actual_arrival_date = actual_arrival_date;
    }

    public String getActual_arrival_time() {
        return actual_arrival_time;
    }

    public void setActual_arrival_time(String actual_arrival_time) {
        this.actual_arrival_time = actual_arrival_time;
    }

    public String getActual_departure_date() {
        return actual_departure_date;
    }

    public void setActual_departure_date(String actual_departure_date) {
        this.actual_departure_date = actual_departure_date;
    }

    public String getActual_departure_time() {
        return actual_departure_time;
    }

    public void setActual_departure_time(String actual_departure_time) {
        this.actual_departure_time = actual_departure_time;
    }

    public String getExpected_departure_date() {
        return expected_departure_date;
    }

    public void setExpected_departure_date(String expected_departure_date) {
        this.expected_departure_date = expected_departure_date;
    }

    public String getExpected_departure_time() {
        return expected_departure_time;
    }

    public void setExpected_departure_time(String expected_departure_time) {
        this.expected_departure_time = expected_departure_time;
    }

    public String getCountry_code() {
        return country_code;
    }

    public void setCountry_code(String country_code) {
        this.country_code = country_code;
    }

    public String getCountry_name() {
        return country_name;
    }

    public void setCountry_name(String country_name) {
        this.country_name = country_name;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getCheckpoint_id() {
        return checkpoint_id;
    }

    public void setCheckpoint_id(String checkpoint_id) {
        this.checkpoint_id = checkpoint_id;
    }

    /** To-one relationship, resolved on first access. */
    public Checkpoint getCheckpoint() {
        String __key = this.checkpoint_id;
        if (checkpoint__resolvedKey == null || checkpoint__resolvedKey != __key) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            CheckpointDao targetDao = daoSession.getCheckpointDao();
            Checkpoint checkpointNew = targetDao.load(__key);
            synchronized (this) {
                checkpoint = checkpointNew;
            	checkpoint__resolvedKey = __key;
            }
        }
        return checkpoint;
    }

    public void setCheckpoint(Checkpoint checkpoint) {
        synchronized (this) {
            this.checkpoint = checkpoint;
            checkpoint_id = checkpoint == null ? null : checkpoint.getId();
            checkpoint__resolvedKey = checkpoint_id;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    @Override
    public void save() {
        DaoTask.getInstance().getSession().getRouteRowDao().insertOrReplace(this);
    }
    // KEEP METHODS END

}
