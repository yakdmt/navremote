package xyz.yakdmt.navremote.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import xyz.yakdmt.navremote.database.Order;
import xyz.yakdmt.navremote.database.Client;
import xyz.yakdmt.navremote.database.Contact;
import xyz.yakdmt.navremote.database.Cargo;
import xyz.yakdmt.navremote.database.Delivery;
import xyz.yakdmt.navremote.database.Product;
import xyz.yakdmt.navremote.database.Document;
import xyz.yakdmt.navremote.database.Checkpoint;
import xyz.yakdmt.navremote.database.RouteRow;
import xyz.yakdmt.navremote.database.Comment;
import xyz.yakdmt.navremote.database.Work;
import xyz.yakdmt.navremote.database.Sort;

import xyz.yakdmt.navremote.database.OrderDao;
import xyz.yakdmt.navremote.database.ClientDao;
import xyz.yakdmt.navremote.database.ContactDao;
import xyz.yakdmt.navremote.database.CargoDao;
import xyz.yakdmt.navremote.database.DeliveryDao;
import xyz.yakdmt.navremote.database.ProductDao;
import xyz.yakdmt.navremote.database.DocumentDao;
import xyz.yakdmt.navremote.database.CheckpointDao;
import xyz.yakdmt.navremote.database.RouteRowDao;
import xyz.yakdmt.navremote.database.CommentDao;
import xyz.yakdmt.navremote.database.WorkDao;
import xyz.yakdmt.navremote.database.SortDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig orderDaoConfig;
    private final DaoConfig clientDaoConfig;
    private final DaoConfig contactDaoConfig;
    private final DaoConfig cargoDaoConfig;
    private final DaoConfig deliveryDaoConfig;
    private final DaoConfig productDaoConfig;
    private final DaoConfig documentDaoConfig;
    private final DaoConfig checkpointDaoConfig;
    private final DaoConfig routeRowDaoConfig;
    private final DaoConfig commentDaoConfig;
    private final DaoConfig workDaoConfig;
    private final DaoConfig sortDaoConfig;

    private final OrderDao orderDao;
    private final ClientDao clientDao;
    private final ContactDao contactDao;
    private final CargoDao cargoDao;
    private final DeliveryDao deliveryDao;
    private final ProductDao productDao;
    private final DocumentDao documentDao;
    private final CheckpointDao checkpointDao;
    private final RouteRowDao routeRowDao;
    private final CommentDao commentDao;
    private final WorkDao workDao;
    private final SortDao sortDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        orderDaoConfig = daoConfigMap.get(OrderDao.class).clone();
        orderDaoConfig.initIdentityScope(type);

        clientDaoConfig = daoConfigMap.get(ClientDao.class).clone();
        clientDaoConfig.initIdentityScope(type);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        cargoDaoConfig = daoConfigMap.get(CargoDao.class).clone();
        cargoDaoConfig.initIdentityScope(type);

        deliveryDaoConfig = daoConfigMap.get(DeliveryDao.class).clone();
        deliveryDaoConfig.initIdentityScope(type);

        productDaoConfig = daoConfigMap.get(ProductDao.class).clone();
        productDaoConfig.initIdentityScope(type);

        documentDaoConfig = daoConfigMap.get(DocumentDao.class).clone();
        documentDaoConfig.initIdentityScope(type);

        checkpointDaoConfig = daoConfigMap.get(CheckpointDao.class).clone();
        checkpointDaoConfig.initIdentityScope(type);

        routeRowDaoConfig = daoConfigMap.get(RouteRowDao.class).clone();
        routeRowDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        workDaoConfig = daoConfigMap.get(WorkDao.class).clone();
        workDaoConfig.initIdentityScope(type);

        sortDaoConfig = daoConfigMap.get(SortDao.class).clone();
        sortDaoConfig.initIdentityScope(type);

        orderDao = new OrderDao(orderDaoConfig, this);
        clientDao = new ClientDao(clientDaoConfig, this);
        contactDao = new ContactDao(contactDaoConfig, this);
        cargoDao = new CargoDao(cargoDaoConfig, this);
        deliveryDao = new DeliveryDao(deliveryDaoConfig, this);
        productDao = new ProductDao(productDaoConfig, this);
        documentDao = new DocumentDao(documentDaoConfig, this);
        checkpointDao = new CheckpointDao(checkpointDaoConfig, this);
        routeRowDao = new RouteRowDao(routeRowDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);
        workDao = new WorkDao(workDaoConfig, this);
        sortDao = new SortDao(sortDaoConfig, this);

        registerDao(Order.class, orderDao);
        registerDao(Client.class, clientDao);
        registerDao(Contact.class, contactDao);
        registerDao(Cargo.class, cargoDao);
        registerDao(Delivery.class, deliveryDao);
        registerDao(Product.class, productDao);
        registerDao(Document.class, documentDao);
        registerDao(Checkpoint.class, checkpointDao);
        registerDao(RouteRow.class, routeRowDao);
        registerDao(Comment.class, commentDao);
        registerDao(Work.class, workDao);
        registerDao(Sort.class, sortDao);
    }
    
    public void clear() {
        orderDaoConfig.getIdentityScope().clear();
        clientDaoConfig.getIdentityScope().clear();
        contactDaoConfig.getIdentityScope().clear();
        cargoDaoConfig.getIdentityScope().clear();
        deliveryDaoConfig.getIdentityScope().clear();
        productDaoConfig.getIdentityScope().clear();
        documentDaoConfig.getIdentityScope().clear();
        checkpointDaoConfig.getIdentityScope().clear();
        routeRowDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
        workDaoConfig.getIdentityScope().clear();
        sortDaoConfig.getIdentityScope().clear();
    }

    public OrderDao getOrderDao() {
        return orderDao;
    }

    public ClientDao getClientDao() {
        return clientDao;
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

    public CargoDao getCargoDao() {
        return cargoDao;
    }

    public DeliveryDao getDeliveryDao() {
        return deliveryDao;
    }

    public ProductDao getProductDao() {
        return productDao;
    }

    public DocumentDao getDocumentDao() {
        return documentDao;
    }

    public CheckpointDao getCheckpointDao() {
        return checkpointDao;
    }

    public RouteRowDao getRouteRowDao() {
        return routeRowDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public WorkDao getWorkDao() {
        return workDao;
    }

    public SortDao getSortDao() {
        return sortDao;
    }

}
